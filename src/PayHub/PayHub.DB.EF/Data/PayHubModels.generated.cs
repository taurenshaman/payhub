//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
//
//     Produced by Entity Framework Visual Editor v2.0.5.6
//     Source:                    https://github.com/msawczyn/EFDesigner
//     Visual Studio Marketplace: https://marketplace.visualstudio.com/items?itemName=michaelsawczyn.EFDesigner
//     Documentation:             https://msawczyn.github.io/EFDesigner/
//     License (MIT):             https://github.com/msawczyn/EFDesigner/blob/master/LICENSE
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace PayHub.DB.Data
{
   /// <inheritdoc/>
   public partial class PayHubModels : DbContext
   {
      #region DbSets
      public virtual Microsoft.EntityFrameworkCore.DbSet<global::PayHub.DB.Data.Currency> Currency { get; set; }
      public virtual Microsoft.EntityFrameworkCore.DbSet<global::PayHub.DB.Data.P2PFundOrder> P2PFundOrder { get; set; }
      public virtual Microsoft.EntityFrameworkCore.DbSet<global::PayHub.DB.Data.WithdrawAccount> WithdrawAccount { get; set; }
      #endregion DbSets

      /// <summary>
      /// Default connection string
      /// </summary>
      public static string ConnectionString { get; set; } = @"Data Source=REVENGER\SQLEXPRESS;Initial Catalog=payhub;User ID=sa;Password=whosyourdaddy";

      /// <inheritdoc />
      public PayHubModels(DbContextOptions<PayHubModels> options) : base(options)
      {
      }

      partial void CustomInit(DbContextOptionsBuilder optionsBuilder);

      /// <inheritdoc />
      protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
      {
         CustomInit(optionsBuilder);
      }

      partial void OnModelCreatingImpl(ModelBuilder modelBuilder);
      partial void OnModelCreatedImpl(ModelBuilder modelBuilder);

      /// <inheritdoc />
      protected override void OnModelCreating(ModelBuilder modelBuilder)
      {
         base.OnModelCreating(modelBuilder);
         OnModelCreatingImpl(modelBuilder);

         modelBuilder.HasDefaultSchema("dbo");

         modelBuilder.Entity<global::PayHub.DB.Data.Currency>()
                     .ToTable("Currency")
                     .HasKey(t => t.Id);
         modelBuilder.Entity<global::PayHub.DB.Data.Currency>()
                     .Property(t => t.Id)
                     .HasMaxLength(32)
                     .IsRequired()
                     .ValueGeneratedOnAdd();
         modelBuilder.Entity<global::PayHub.DB.Data.Currency>()
                     .Property(t => t.Name)
                     .HasMaxLength(64)
                     .IsRequired();
         modelBuilder.Entity<global::PayHub.DB.Data.Currency>().HasIndex(t => t.Name);
         modelBuilder.Entity<global::PayHub.DB.Data.Currency>()
                     .Property(t => t.Unit)
                     .HasMaxLength(16)
                     .IsRequired();
         modelBuilder.Entity<global::PayHub.DB.Data.Currency>().HasIndex(t => t.Unit);

         modelBuilder.Entity<global::PayHub.DB.Data.P2PFundOrder>()
                     .ToTable("P2PFundOrder")
                     .HasKey(t => t.Id);
         modelBuilder.Entity<global::PayHub.DB.Data.P2PFundOrder>()
                     .Property(t => t.Id)
                     .HasMaxLength(32)
                     .IsRequired()
                     .ValueGeneratedOnAdd();
         modelBuilder.Entity<global::PayHub.DB.Data.P2PFundOrder>()
                     .Property(t => t.CurrencyId)
                     .HasMaxLength(32)
                     .IsRequired();
         modelBuilder.Entity<global::PayHub.DB.Data.P2PFundOrder>()
                     .Property(t => t.FromUserId)
                     .HasMaxLength(32)
                     .IsRequired();
         modelBuilder.Entity<global::PayHub.DB.Data.P2PFundOrder>()
                     .Property(t => t.FromAddress)
                     .HasMaxLength(256)
                     .IsRequired();
         modelBuilder.Entity<global::PayHub.DB.Data.P2PFundOrder>()
                     .Property(t => t.ToUserId)
                     .HasMaxLength(32)
                     .IsRequired();
         modelBuilder.Entity<global::PayHub.DB.Data.P2PFundOrder>()
                     .Property(t => t.ToAddress)
                     .HasMaxLength(256)
                     .IsRequired();
         modelBuilder.Entity<global::PayHub.DB.Data.P2PFundOrder>()
                     .Property(t => t.Amount)
                     .IsRequired();
         modelBuilder.Entity<global::PayHub.DB.Data.P2PFundOrder>()
                     .Property(t => t.Transaction)
                     .HasMaxLength(256);

         modelBuilder.Entity<global::PayHub.DB.Data.WithdrawAccount>()
                     .ToTable("WithdrawAccount")
                     .HasKey(t => t.Id);
         modelBuilder.Entity<global::PayHub.DB.Data.WithdrawAccount>()
                     .Property(t => t.Id)
                     .HasMaxLength(32)
                     .IsRequired()
                     .ValueGeneratedOnAdd();
         modelBuilder.Entity<global::PayHub.DB.Data.WithdrawAccount>()
                     .Property(t => t.UserId)
                     .HasMaxLength(32)
                     .IsRequired();
         modelBuilder.Entity<global::PayHub.DB.Data.WithdrawAccount>().HasIndex(t => t.UserId);
         modelBuilder.Entity<global::PayHub.DB.Data.WithdrawAccount>()
                     .Property(t => t.CurrencyId)
                     .HasMaxLength(32)
                     .IsRequired();
         modelBuilder.Entity<global::PayHub.DB.Data.WithdrawAccount>().HasIndex(t => t.CurrencyId);
         modelBuilder.Entity<global::PayHub.DB.Data.WithdrawAccount>()
                     .Property(t => t.Account)
                     .HasMaxLength(256)
                     .IsRequired();
         modelBuilder.Entity<global::PayHub.DB.Data.WithdrawAccount>()
                     .Property(t => t.Name)
                     .HasMaxLength(256)
                     .IsRequired();
         modelBuilder.Entity<global::PayHub.DB.Data.WithdrawAccount>().HasIndex(t => t.Name);

         OnModelCreatedImpl(modelBuilder);
      }
   }
}
