//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
//
//     Produced by Entity Framework Visual Editor v2.0.5.6
//     Source:                    https://github.com/msawczyn/EFDesigner
//     Visual Studio Marketplace: https://marketplace.visualstudio.com/items?itemName=michaelsawczyn.EFDesigner
//     Documentation:             https://msawczyn.github.io/EFDesigner/
//     License (MIT):             https://github.com/msawczyn/EFDesigner/blob/master/LICENSE
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Linq;
using System.Runtime.CompilerServices;

namespace PayHub.DB.Data
{
   public partial class P2PFundOrder
   {
      partial void Init();

      /// <summary>
      /// Default constructor. Protected due to required properties, but present because EF needs it.
      /// </summary>
      protected P2PFundOrder()
      {
         Init();
      }

      /// <summary>
      /// Replaces default constructor, since it's protected. Caller assumes responsibility for setting all required values before saving.
      /// </summary>
      public static P2PFundOrder CreateP2PFundOrderUnsafe()
      {
         return new P2PFundOrder();
      }

      /// <summary>
      /// Public constructor with required data
      /// </summary>
      /// <param name="currencyid"></param>
      /// <param name="fromuserid"></param>
      /// <param name="fromaddress"></param>
      /// <param name="touserid"></param>
      /// <param name="toaddress"></param>
      /// <param name="amount"></param>
      public P2PFundOrder(string currencyid, string fromuserid, string fromaddress, string touserid, string toaddress, double amount)
      {
         if (string.IsNullOrEmpty(currencyid)) throw new ArgumentNullException(nameof(currencyid));
         this.CurrencyId = currencyid;

         if (string.IsNullOrEmpty(fromuserid)) throw new ArgumentNullException(nameof(fromuserid));
         this.FromUserId = fromuserid;

         if (string.IsNullOrEmpty(fromaddress)) throw new ArgumentNullException(nameof(fromaddress));
         this.FromAddress = fromaddress;

         if (string.IsNullOrEmpty(touserid)) throw new ArgumentNullException(nameof(touserid));
         this.ToUserId = touserid;

         if (string.IsNullOrEmpty(toaddress)) throw new ArgumentNullException(nameof(toaddress));
         this.ToAddress = toaddress;

         this.Amount = amount;


         Init();
      }

      /// <summary>
      /// Static create function (for use in LINQ queries, etc.)
      /// </summary>
      /// <param name="currencyid"></param>
      /// <param name="fromuserid"></param>
      /// <param name="fromaddress"></param>
      /// <param name="touserid"></param>
      /// <param name="toaddress"></param>
      /// <param name="amount"></param>
      public static P2PFundOrder Create(string currencyid, string fromuserid, string fromaddress, string touserid, string toaddress, double amount)
      {
         return new P2PFundOrder(currencyid, fromuserid, fromaddress, touserid, toaddress, amount);
      }

      /*************************************************************************
       * Properties
       *************************************************************************/

      /// <summary>
      /// Identity, Indexed, Required, Min length = 32, Max length = 32
      /// </summary>
      [Key]
      [Required]
      [MinLength(32)]
      [MaxLength(32)]
      [StringLength(32)]
      public string Id { get; protected set; }

      /// <summary>
      /// Required, Min length = 32, Max length = 32
      /// </summary>
      [Required]
      [MinLength(32)]
      [MaxLength(32)]
      [StringLength(32)]
      public string CurrencyId { get; set; }

      /// <summary>
      /// Required, Min length = 32, Max length = 32
      /// </summary>
      [Required]
      [MinLength(32)]
      [MaxLength(32)]
      [StringLength(32)]
      public string FromUserId { get; set; }

      /// <summary>
      /// Required, Min length = 1, Max length = 256
      /// </summary>
      [Required]
      [MinLength(1)]
      [MaxLength(256)]
      [StringLength(256)]
      public string FromAddress { get; set; }

      /// <summary>
      /// Required, Min length = 32, Max length = 32
      /// </summary>
      [Required]
      [MinLength(32)]
      [MaxLength(32)]
      [StringLength(32)]
      public string ToUserId { get; set; }

      /// <summary>
      /// Required, Min length = 1, Max length = 256
      /// </summary>
      [Required]
      [MinLength(1)]
      [MaxLength(256)]
      [StringLength(256)]
      public string ToAddress { get; set; }

      /// <summary>
      /// Required
      /// </summary>
      [Required]
      public double Amount { get; set; }

      /// <summary>
      /// Min length = 1, Max length = 256
      /// </summary>
      [MinLength(1)]
      [MaxLength(256)]
      [StringLength(256)]
      public string Transaction { get; set; }

   }
}

